// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameMsg.protoc

#include "../../inc/protocol/GameMsg.protoc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_GameMsg_2eprotoc {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GameMsg_2eprotoc ::google::protobuf::internal::SCCInfo<0> scc_info_Chat;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GameMsg_2eprotoc ::google::protobuf::internal::SCCInfo<0> scc_info_PlyrPos;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GameMsg_2eprotoc ::google::protobuf::internal::SCCInfo<1> scc_info_Plyr;
}  // namespace protobuf_GameMsg_2eprotoc
namespace GameMsg {
class SyncPlyrIdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SyncPlyrId>
      _instance;
} _SyncPlyrId_default_instance_;
class ChatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Chat>
      _instance;
} _Chat_default_instance_;
class PlyrPosDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlyrPos>
      _instance;
} _PlyrPos_default_instance_;
class PlyrDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Plyr>
      _instance;
} _Plyr_default_instance_;
class SyncPlyrsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SyncPlyrs>
      _instance;
} _SyncPlyrs_default_instance_;
class BroadCastDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BroadCast>
      _instance;
  const ::GameMsg::Chat* plyrchat_;
  const ::GameMsg::PlyrPos* plyrpos_;
  ::google::protobuf::int32 actiondata_;
} _BroadCast_default_instance_;
}  // namespace GameMsg
namespace protobuf_GameMsg_2eprotoc {
static void InitDefaultsSyncPlyrId() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GameMsg::_SyncPlyrId_default_instance_;
    new (ptr) ::GameMsg::SyncPlyrId();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GameMsg::SyncPlyrId::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SyncPlyrId =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSyncPlyrId}, {}};

static void InitDefaultsChat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GameMsg::_Chat_default_instance_;
    new (ptr) ::GameMsg::Chat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GameMsg::Chat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Chat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsChat}, {}};

static void InitDefaultsPlyrPos() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GameMsg::_PlyrPos_default_instance_;
    new (ptr) ::GameMsg::PlyrPos();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GameMsg::PlyrPos::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PlyrPos =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPlyrPos}, {}};

static void InitDefaultsPlyr() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GameMsg::_Plyr_default_instance_;
    new (ptr) ::GameMsg::Plyr();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GameMsg::Plyr::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Plyr =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPlyr}, {
      &protobuf_GameMsg_2eprotoc::scc_info_PlyrPos.base,}};

static void InitDefaultsSyncPlyrs() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GameMsg::_SyncPlyrs_default_instance_;
    new (ptr) ::GameMsg::SyncPlyrs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GameMsg::SyncPlyrs::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SyncPlyrs =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSyncPlyrs}, {
      &protobuf_GameMsg_2eprotoc::scc_info_Plyr.base,}};

static void InitDefaultsBroadCast() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GameMsg::_BroadCast_default_instance_;
    new (ptr) ::GameMsg::BroadCast();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GameMsg::BroadCast::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_BroadCast =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsBroadCast}, {
      &protobuf_GameMsg_2eprotoc::scc_info_Chat.base,
      &protobuf_GameMsg_2eprotoc::scc_info_PlyrPos.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_SyncPlyrId.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Chat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlyrPos.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Plyr.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SyncPlyrs.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BroadCast.base);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::SyncPlyrId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::SyncPlyrId, plyrid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::SyncPlyrId, usrname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::Chat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::Chat, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::PlyrPos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::PlyrPos, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::PlyrPos, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::PlyrPos, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::PlyrPos, v_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::PlyrPos, bloodvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::Plyr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::Plyr, plyrid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::Plyr, plyrpos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::Plyr, usrname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::SyncPlyrs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::SyncPlyrs, plyrs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::BroadCast, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::BroadCast, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::BroadCast, plyrid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::BroadCast, bctype_),
  offsetof(::GameMsg::BroadCastDefaultTypeInternal, plyrchat_),
  offsetof(::GameMsg::BroadCastDefaultTypeInternal, plyrpos_),
  offsetof(::GameMsg::BroadCastDefaultTypeInternal, actiondata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::BroadCast, usrname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMsg::BroadCast, Data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::GameMsg::SyncPlyrId)},
  { 7, -1, sizeof(::GameMsg::Chat)},
  { 13, -1, sizeof(::GameMsg::PlyrPos)},
  { 23, -1, sizeof(::GameMsg::Plyr)},
  { 31, -1, sizeof(::GameMsg::SyncPlyrs)},
  { 37, -1, sizeof(::GameMsg::BroadCast)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::GameMsg::_SyncPlyrId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GameMsg::_Chat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GameMsg::_PlyrPos_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GameMsg::_Plyr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GameMsg::_SyncPlyrs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GameMsg::_BroadCast_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "GameMsg.protoc", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016GameMsg.protoc\022\007GameMsg\"-\n\nSyncPlyrId\022"
      "\016\n\006plyrId\030\001 \001(\005\022\017\n\007usrName\030\002 \001(\t\"\027\n\004Chat"
      "\022\017\n\007content\030\001 \001(\t\"I\n\007PlyrPos\022\t\n\001X\030\001 \001(\002\022"
      "\t\n\001Y\030\002 \001(\002\022\t\n\001Z\030\003 \001(\002\022\t\n\001V\030\004 \001(\002\022\022\n\nbloo"
      "dValue\030\005 \001(\005\"J\n\004Plyr\022\016\n\006plyrId\030\001 \001(\005\022!\n\007"
      "plyrPos\030\002 \001(\0132\020.GameMsg.PlyrPos\022\017\n\007usrNa"
      "me\030\003 \001(\t\")\n\tSyncPlyrs\022\034\n\005plyrs\030\001 \003(\0132\r.G"
      "ameMsg.Plyr\"\242\001\n\tBroadCast\022\016\n\006plyrId\030\001 \001("
      "\005\022\016\n\006bcType\030\002 \001(\005\022!\n\010plyrChat\030\003 \001(\0132\r.Ga"
      "meMsg.ChatH\000\022#\n\007plyrPos\030\004 \001(\0132\020.GameMsg."
      "PlyrPosH\000\022\024\n\nactionData\030\005 \001(\005H\000\022\017\n\007usrNa"
      "me\030\006 \001(\tB\006\n\004Datab\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 464);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GameMsg.protoc", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_GameMsg_2eprotoc
namespace GameMsg {

// ===================================================================

void SyncPlyrId::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncPlyrId::kPlyrIdFieldNumber;
const int SyncPlyrId::kUsrNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncPlyrId::SyncPlyrId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameMsg_2eprotoc::scc_info_SyncPlyrId.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GameMsg.SyncPlyrId)
}
SyncPlyrId::SyncPlyrId(const SyncPlyrId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  usrname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.usrname().size() > 0) {
    usrname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.usrname_);
  }
  plyrid_ = from.plyrid_;
  // @@protoc_insertion_point(copy_constructor:GameMsg.SyncPlyrId)
}

void SyncPlyrId::SharedCtor() {
  usrname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plyrid_ = 0;
}

SyncPlyrId::~SyncPlyrId() {
  // @@protoc_insertion_point(destructor:GameMsg.SyncPlyrId)
  SharedDtor();
}

void SyncPlyrId::SharedDtor() {
  usrname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SyncPlyrId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SyncPlyrId::descriptor() {
  ::protobuf_GameMsg_2eprotoc::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMsg_2eprotoc::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SyncPlyrId& SyncPlyrId::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameMsg_2eprotoc::scc_info_SyncPlyrId.base);
  return *internal_default_instance();
}


void SyncPlyrId::Clear() {
// @@protoc_insertion_point(message_clear_start:GameMsg.SyncPlyrId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  usrname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plyrid_ = 0;
  _internal_metadata_.Clear();
}

bool SyncPlyrId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GameMsg.SyncPlyrId)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 plyrId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &plyrid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string usrName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usrname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->usrname().data(), static_cast<int>(this->usrname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GameMsg.SyncPlyrId.usrName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GameMsg.SyncPlyrId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GameMsg.SyncPlyrId)
  return false;
#undef DO_
}

void SyncPlyrId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GameMsg.SyncPlyrId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 plyrId = 1;
  if (this->plyrid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->plyrid(), output);
  }

  // string usrName = 2;
  if (this->usrname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->usrname().data(), static_cast<int>(this->usrname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GameMsg.SyncPlyrId.usrName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->usrname(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GameMsg.SyncPlyrId)
}

::google::protobuf::uint8* SyncPlyrId::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GameMsg.SyncPlyrId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 plyrId = 1;
  if (this->plyrid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->plyrid(), target);
  }

  // string usrName = 2;
  if (this->usrname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->usrname().data(), static_cast<int>(this->usrname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GameMsg.SyncPlyrId.usrName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->usrname(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GameMsg.SyncPlyrId)
  return target;
}

size_t SyncPlyrId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GameMsg.SyncPlyrId)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string usrName = 2;
  if (this->usrname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->usrname());
  }

  // int32 plyrId = 1;
  if (this->plyrid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->plyrid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SyncPlyrId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GameMsg.SyncPlyrId)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncPlyrId* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncPlyrId>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GameMsg.SyncPlyrId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GameMsg.SyncPlyrId)
    MergeFrom(*source);
  }
}

void SyncPlyrId::MergeFrom(const SyncPlyrId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GameMsg.SyncPlyrId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.usrname().size() > 0) {

    usrname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.usrname_);
  }
  if (from.plyrid() != 0) {
    set_plyrid(from.plyrid());
  }
}

void SyncPlyrId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GameMsg.SyncPlyrId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncPlyrId::CopyFrom(const SyncPlyrId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GameMsg.SyncPlyrId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncPlyrId::IsInitialized() const {
  return true;
}

void SyncPlyrId::Swap(SyncPlyrId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncPlyrId::InternalSwap(SyncPlyrId* other) {
  using std::swap;
  usrname_.Swap(&other->usrname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(plyrid_, other->plyrid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SyncPlyrId::GetMetadata() const {
  protobuf_GameMsg_2eprotoc::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMsg_2eprotoc::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Chat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Chat::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Chat::Chat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameMsg_2eprotoc::scc_info_Chat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GameMsg.Chat)
}
Chat::Chat(const Chat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  // @@protoc_insertion_point(copy_constructor:GameMsg.Chat)
}

void Chat::SharedCtor() {
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Chat::~Chat() {
  // @@protoc_insertion_point(destructor:GameMsg.Chat)
  SharedDtor();
}

void Chat::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Chat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Chat::descriptor() {
  ::protobuf_GameMsg_2eprotoc::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMsg_2eprotoc::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Chat& Chat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameMsg_2eprotoc::scc_info_Chat.base);
  return *internal_default_instance();
}


void Chat::Clear() {
// @@protoc_insertion_point(message_clear_start:GameMsg.Chat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Chat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GameMsg.Chat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string content = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GameMsg.Chat.content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GameMsg.Chat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GameMsg.Chat)
  return false;
#undef DO_
}

void Chat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GameMsg.Chat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GameMsg.Chat.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->content(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GameMsg.Chat)
}

::google::protobuf::uint8* Chat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GameMsg.Chat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GameMsg.Chat.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->content(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GameMsg.Chat)
  return target;
}

size_t Chat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GameMsg.Chat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string content = 1;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Chat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GameMsg.Chat)
  GOOGLE_DCHECK_NE(&from, this);
  const Chat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Chat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GameMsg.Chat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GameMsg.Chat)
    MergeFrom(*source);
  }
}

void Chat::MergeFrom(const Chat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GameMsg.Chat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
}

void Chat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GameMsg.Chat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Chat::CopyFrom(const Chat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GameMsg.Chat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Chat::IsInitialized() const {
  return true;
}

void Chat::Swap(Chat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Chat::InternalSwap(Chat* other) {
  using std::swap;
  content_.Swap(&other->content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Chat::GetMetadata() const {
  protobuf_GameMsg_2eprotoc::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMsg_2eprotoc::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlyrPos::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlyrPos::kXFieldNumber;
const int PlyrPos::kYFieldNumber;
const int PlyrPos::kZFieldNumber;
const int PlyrPos::kVFieldNumber;
const int PlyrPos::kBloodValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlyrPos::PlyrPos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameMsg_2eprotoc::scc_info_PlyrPos.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GameMsg.PlyrPos)
}
PlyrPos::PlyrPos(const PlyrPos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&bloodvalue_) -
    reinterpret_cast<char*>(&x_)) + sizeof(bloodvalue_));
  // @@protoc_insertion_point(copy_constructor:GameMsg.PlyrPos)
}

void PlyrPos::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bloodvalue_) -
      reinterpret_cast<char*>(&x_)) + sizeof(bloodvalue_));
}

PlyrPos::~PlyrPos() {
  // @@protoc_insertion_point(destructor:GameMsg.PlyrPos)
  SharedDtor();
}

void PlyrPos::SharedDtor() {
}

void PlyrPos::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlyrPos::descriptor() {
  ::protobuf_GameMsg_2eprotoc::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMsg_2eprotoc::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlyrPos& PlyrPos::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameMsg_2eprotoc::scc_info_PlyrPos.base);
  return *internal_default_instance();
}


void PlyrPos::Clear() {
// @@protoc_insertion_point(message_clear_start:GameMsg.PlyrPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bloodvalue_) -
      reinterpret_cast<char*>(&x_)) + sizeof(bloodvalue_));
  _internal_metadata_.Clear();
}

bool PlyrPos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GameMsg.PlyrPos)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float X = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float V = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &v_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 bloodValue = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bloodvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GameMsg.PlyrPos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GameMsg.PlyrPos)
  return false;
#undef DO_
}

void PlyrPos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GameMsg.PlyrPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float X = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float Y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float Z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  // float V = 4;
  if (this->v() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->v(), output);
  }

  // int32 bloodValue = 5;
  if (this->bloodvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->bloodvalue(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GameMsg.PlyrPos)
}

::google::protobuf::uint8* PlyrPos::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GameMsg.PlyrPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float X = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float Y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float Z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  // float V = 4;
  if (this->v() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->v(), target);
  }

  // int32 bloodValue = 5;
  if (this->bloodvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->bloodvalue(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GameMsg.PlyrPos)
  return target;
}

size_t PlyrPos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GameMsg.PlyrPos)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float X = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float Y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float Z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  // float V = 4;
  if (this->v() != 0) {
    total_size += 1 + 4;
  }

  // int32 bloodValue = 5;
  if (this->bloodvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bloodvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlyrPos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GameMsg.PlyrPos)
  GOOGLE_DCHECK_NE(&from, this);
  const PlyrPos* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlyrPos>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GameMsg.PlyrPos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GameMsg.PlyrPos)
    MergeFrom(*source);
  }
}

void PlyrPos::MergeFrom(const PlyrPos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GameMsg.PlyrPos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.v() != 0) {
    set_v(from.v());
  }
  if (from.bloodvalue() != 0) {
    set_bloodvalue(from.bloodvalue());
  }
}

void PlyrPos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GameMsg.PlyrPos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlyrPos::CopyFrom(const PlyrPos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GameMsg.PlyrPos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlyrPos::IsInitialized() const {
  return true;
}

void PlyrPos::Swap(PlyrPos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlyrPos::InternalSwap(PlyrPos* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(v_, other->v_);
  swap(bloodvalue_, other->bloodvalue_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlyrPos::GetMetadata() const {
  protobuf_GameMsg_2eprotoc::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMsg_2eprotoc::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Plyr::InitAsDefaultInstance() {
  ::GameMsg::_Plyr_default_instance_._instance.get_mutable()->plyrpos_ = const_cast< ::GameMsg::PlyrPos*>(
      ::GameMsg::PlyrPos::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Plyr::kPlyrIdFieldNumber;
const int Plyr::kPlyrPosFieldNumber;
const int Plyr::kUsrNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Plyr::Plyr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameMsg_2eprotoc::scc_info_Plyr.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GameMsg.Plyr)
}
Plyr::Plyr(const Plyr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  usrname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.usrname().size() > 0) {
    usrname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.usrname_);
  }
  if (from.has_plyrpos()) {
    plyrpos_ = new ::GameMsg::PlyrPos(*from.plyrpos_);
  } else {
    plyrpos_ = NULL;
  }
  plyrid_ = from.plyrid_;
  // @@protoc_insertion_point(copy_constructor:GameMsg.Plyr)
}

void Plyr::SharedCtor() {
  usrname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&plyrpos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&plyrid_) -
      reinterpret_cast<char*>(&plyrpos_)) + sizeof(plyrid_));
}

Plyr::~Plyr() {
  // @@protoc_insertion_point(destructor:GameMsg.Plyr)
  SharedDtor();
}

void Plyr::SharedDtor() {
  usrname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete plyrpos_;
}

void Plyr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Plyr::descriptor() {
  ::protobuf_GameMsg_2eprotoc::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMsg_2eprotoc::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Plyr& Plyr::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameMsg_2eprotoc::scc_info_Plyr.base);
  return *internal_default_instance();
}


void Plyr::Clear() {
// @@protoc_insertion_point(message_clear_start:GameMsg.Plyr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  usrname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && plyrpos_ != NULL) {
    delete plyrpos_;
  }
  plyrpos_ = NULL;
  plyrid_ = 0;
  _internal_metadata_.Clear();
}

bool Plyr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GameMsg.Plyr)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 plyrId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &plyrid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GameMsg.PlyrPos plyrPos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_plyrpos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string usrName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usrname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->usrname().data(), static_cast<int>(this->usrname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GameMsg.Plyr.usrName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GameMsg.Plyr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GameMsg.Plyr)
  return false;
#undef DO_
}

void Plyr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GameMsg.Plyr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 plyrId = 1;
  if (this->plyrid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->plyrid(), output);
  }

  // .GameMsg.PlyrPos plyrPos = 2;
  if (this->has_plyrpos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_plyrpos(), output);
  }

  // string usrName = 3;
  if (this->usrname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->usrname().data(), static_cast<int>(this->usrname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GameMsg.Plyr.usrName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->usrname(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GameMsg.Plyr)
}

::google::protobuf::uint8* Plyr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GameMsg.Plyr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 plyrId = 1;
  if (this->plyrid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->plyrid(), target);
  }

  // .GameMsg.PlyrPos plyrPos = 2;
  if (this->has_plyrpos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_plyrpos(), deterministic, target);
  }

  // string usrName = 3;
  if (this->usrname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->usrname().data(), static_cast<int>(this->usrname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GameMsg.Plyr.usrName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->usrname(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GameMsg.Plyr)
  return target;
}

size_t Plyr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GameMsg.Plyr)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string usrName = 3;
  if (this->usrname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->usrname());
  }

  // .GameMsg.PlyrPos plyrPos = 2;
  if (this->has_plyrpos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *plyrpos_);
  }

  // int32 plyrId = 1;
  if (this->plyrid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->plyrid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Plyr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GameMsg.Plyr)
  GOOGLE_DCHECK_NE(&from, this);
  const Plyr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Plyr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GameMsg.Plyr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GameMsg.Plyr)
    MergeFrom(*source);
  }
}

void Plyr::MergeFrom(const Plyr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GameMsg.Plyr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.usrname().size() > 0) {

    usrname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.usrname_);
  }
  if (from.has_plyrpos()) {
    mutable_plyrpos()->::GameMsg::PlyrPos::MergeFrom(from.plyrpos());
  }
  if (from.plyrid() != 0) {
    set_plyrid(from.plyrid());
  }
}

void Plyr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GameMsg.Plyr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Plyr::CopyFrom(const Plyr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GameMsg.Plyr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Plyr::IsInitialized() const {
  return true;
}

void Plyr::Swap(Plyr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Plyr::InternalSwap(Plyr* other) {
  using std::swap;
  usrname_.Swap(&other->usrname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(plyrpos_, other->plyrpos_);
  swap(plyrid_, other->plyrid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Plyr::GetMetadata() const {
  protobuf_GameMsg_2eprotoc::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMsg_2eprotoc::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SyncPlyrs::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncPlyrs::kPlyrsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncPlyrs::SyncPlyrs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameMsg_2eprotoc::scc_info_SyncPlyrs.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GameMsg.SyncPlyrs)
}
SyncPlyrs::SyncPlyrs(const SyncPlyrs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      plyrs_(from.plyrs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GameMsg.SyncPlyrs)
}

void SyncPlyrs::SharedCtor() {
}

SyncPlyrs::~SyncPlyrs() {
  // @@protoc_insertion_point(destructor:GameMsg.SyncPlyrs)
  SharedDtor();
}

void SyncPlyrs::SharedDtor() {
}

void SyncPlyrs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SyncPlyrs::descriptor() {
  ::protobuf_GameMsg_2eprotoc::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMsg_2eprotoc::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SyncPlyrs& SyncPlyrs::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameMsg_2eprotoc::scc_info_SyncPlyrs.base);
  return *internal_default_instance();
}


void SyncPlyrs::Clear() {
// @@protoc_insertion_point(message_clear_start:GameMsg.SyncPlyrs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  plyrs_.Clear();
  _internal_metadata_.Clear();
}

bool SyncPlyrs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GameMsg.SyncPlyrs)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .GameMsg.Plyr plyrs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_plyrs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GameMsg.SyncPlyrs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GameMsg.SyncPlyrs)
  return false;
#undef DO_
}

void SyncPlyrs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GameMsg.SyncPlyrs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .GameMsg.Plyr plyrs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->plyrs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->plyrs(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GameMsg.SyncPlyrs)
}

::google::protobuf::uint8* SyncPlyrs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GameMsg.SyncPlyrs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .GameMsg.Plyr plyrs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->plyrs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->plyrs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GameMsg.SyncPlyrs)
  return target;
}

size_t SyncPlyrs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GameMsg.SyncPlyrs)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GameMsg.Plyr plyrs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->plyrs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->plyrs(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SyncPlyrs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GameMsg.SyncPlyrs)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncPlyrs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncPlyrs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GameMsg.SyncPlyrs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GameMsg.SyncPlyrs)
    MergeFrom(*source);
  }
}

void SyncPlyrs::MergeFrom(const SyncPlyrs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GameMsg.SyncPlyrs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  plyrs_.MergeFrom(from.plyrs_);
}

void SyncPlyrs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GameMsg.SyncPlyrs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncPlyrs::CopyFrom(const SyncPlyrs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GameMsg.SyncPlyrs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncPlyrs::IsInitialized() const {
  return true;
}

void SyncPlyrs::Swap(SyncPlyrs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncPlyrs::InternalSwap(SyncPlyrs* other) {
  using std::swap;
  CastToBase(&plyrs_)->InternalSwap(CastToBase(&other->plyrs_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SyncPlyrs::GetMetadata() const {
  protobuf_GameMsg_2eprotoc::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMsg_2eprotoc::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BroadCast::InitAsDefaultInstance() {
  ::GameMsg::_BroadCast_default_instance_.plyrchat_ = const_cast< ::GameMsg::Chat*>(
      ::GameMsg::Chat::internal_default_instance());
  ::GameMsg::_BroadCast_default_instance_.plyrpos_ = const_cast< ::GameMsg::PlyrPos*>(
      ::GameMsg::PlyrPos::internal_default_instance());
  ::GameMsg::_BroadCast_default_instance_.actiondata_ = 0;
}
void BroadCast::set_allocated_plyrchat(::GameMsg::Chat* plyrchat) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_Data();
  if (plyrchat) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      plyrchat = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, plyrchat, submessage_arena);
    }
    set_has_plyrchat();
    Data_.plyrchat_ = plyrchat;
  }
  // @@protoc_insertion_point(field_set_allocated:GameMsg.BroadCast.plyrChat)
}
void BroadCast::set_allocated_plyrpos(::GameMsg::PlyrPos* plyrpos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_Data();
  if (plyrpos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      plyrpos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, plyrpos, submessage_arena);
    }
    set_has_plyrpos();
    Data_.plyrpos_ = plyrpos;
  }
  // @@protoc_insertion_point(field_set_allocated:GameMsg.BroadCast.plyrPos)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BroadCast::kPlyrIdFieldNumber;
const int BroadCast::kBcTypeFieldNumber;
const int BroadCast::kPlyrChatFieldNumber;
const int BroadCast::kPlyrPosFieldNumber;
const int BroadCast::kActionDataFieldNumber;
const int BroadCast::kUsrNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BroadCast::BroadCast()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameMsg_2eprotoc::scc_info_BroadCast.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GameMsg.BroadCast)
}
BroadCast::BroadCast(const BroadCast& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  usrname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.usrname().size() > 0) {
    usrname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.usrname_);
  }
  ::memcpy(&plyrid_, &from.plyrid_,
    static_cast<size_t>(reinterpret_cast<char*>(&bctype_) -
    reinterpret_cast<char*>(&plyrid_)) + sizeof(bctype_));
  clear_has_Data();
  switch (from.Data_case()) {
    case kPlyrChat: {
      mutable_plyrchat()->::GameMsg::Chat::MergeFrom(from.plyrchat());
      break;
    }
    case kPlyrPos: {
      mutable_plyrpos()->::GameMsg::PlyrPos::MergeFrom(from.plyrpos());
      break;
    }
    case kActionData: {
      set_actiondata(from.actiondata());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:GameMsg.BroadCast)
}

void BroadCast::SharedCtor() {
  usrname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&plyrid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bctype_) -
      reinterpret_cast<char*>(&plyrid_)) + sizeof(bctype_));
  clear_has_Data();
}

BroadCast::~BroadCast() {
  // @@protoc_insertion_point(destructor:GameMsg.BroadCast)
  SharedDtor();
}

void BroadCast::SharedDtor() {
  usrname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_Data()) {
    clear_Data();
  }
}

void BroadCast::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BroadCast::descriptor() {
  ::protobuf_GameMsg_2eprotoc::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMsg_2eprotoc::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BroadCast& BroadCast::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameMsg_2eprotoc::scc_info_BroadCast.base);
  return *internal_default_instance();
}


void BroadCast::clear_Data() {
// @@protoc_insertion_point(one_of_clear_start:GameMsg.BroadCast)
  switch (Data_case()) {
    case kPlyrChat: {
      delete Data_.plyrchat_;
      break;
    }
    case kPlyrPos: {
      delete Data_.plyrpos_;
      break;
    }
    case kActionData: {
      // No need to clear
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void BroadCast::Clear() {
// @@protoc_insertion_point(message_clear_start:GameMsg.BroadCast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  usrname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&plyrid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bctype_) -
      reinterpret_cast<char*>(&plyrid_)) + sizeof(bctype_));
  clear_Data();
  _internal_metadata_.Clear();
}

bool BroadCast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GameMsg.BroadCast)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 plyrId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &plyrid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 bcType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bctype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GameMsg.Chat plyrChat = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_plyrchat()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GameMsg.PlyrPos plyrPos = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_plyrpos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 actionData = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          clear_Data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &Data_.actiondata_)));
          set_has_actiondata();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string usrName = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usrname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->usrname().data(), static_cast<int>(this->usrname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GameMsg.BroadCast.usrName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GameMsg.BroadCast)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GameMsg.BroadCast)
  return false;
#undef DO_
}

void BroadCast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GameMsg.BroadCast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 plyrId = 1;
  if (this->plyrid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->plyrid(), output);
  }

  // int32 bcType = 2;
  if (this->bctype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->bctype(), output);
  }

  // .GameMsg.Chat plyrChat = 3;
  if (has_plyrchat()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_plyrchat(), output);
  }

  // .GameMsg.PlyrPos plyrPos = 4;
  if (has_plyrpos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_plyrpos(), output);
  }

  // int32 actionData = 5;
  if (has_actiondata()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->actiondata(), output);
  }

  // string usrName = 6;
  if (this->usrname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->usrname().data(), static_cast<int>(this->usrname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GameMsg.BroadCast.usrName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->usrname(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GameMsg.BroadCast)
}

::google::protobuf::uint8* BroadCast::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GameMsg.BroadCast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 plyrId = 1;
  if (this->plyrid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->plyrid(), target);
  }

  // int32 bcType = 2;
  if (this->bctype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->bctype(), target);
  }

  // .GameMsg.Chat plyrChat = 3;
  if (has_plyrchat()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_plyrchat(), deterministic, target);
  }

  // .GameMsg.PlyrPos plyrPos = 4;
  if (has_plyrpos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_plyrpos(), deterministic, target);
  }

  // int32 actionData = 5;
  if (has_actiondata()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->actiondata(), target);
  }

  // string usrName = 6;
  if (this->usrname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->usrname().data(), static_cast<int>(this->usrname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GameMsg.BroadCast.usrName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->usrname(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GameMsg.BroadCast)
  return target;
}

size_t BroadCast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GameMsg.BroadCast)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string usrName = 6;
  if (this->usrname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->usrname());
  }

  // int32 plyrId = 1;
  if (this->plyrid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->plyrid());
  }

  // int32 bcType = 2;
  if (this->bctype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bctype());
  }

  switch (Data_case()) {
    // .GameMsg.Chat plyrChat = 3;
    case kPlyrChat: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *Data_.plyrchat_);
      break;
    }
    // .GameMsg.PlyrPos plyrPos = 4;
    case kPlyrPos: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *Data_.plyrpos_);
      break;
    }
    // int32 actionData = 5;
    case kActionData: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->actiondata());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BroadCast::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GameMsg.BroadCast)
  GOOGLE_DCHECK_NE(&from, this);
  const BroadCast* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BroadCast>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GameMsg.BroadCast)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GameMsg.BroadCast)
    MergeFrom(*source);
  }
}

void BroadCast::MergeFrom(const BroadCast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GameMsg.BroadCast)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.usrname().size() > 0) {

    usrname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.usrname_);
  }
  if (from.plyrid() != 0) {
    set_plyrid(from.plyrid());
  }
  if (from.bctype() != 0) {
    set_bctype(from.bctype());
  }
  switch (from.Data_case()) {
    case kPlyrChat: {
      mutable_plyrchat()->::GameMsg::Chat::MergeFrom(from.plyrchat());
      break;
    }
    case kPlyrPos: {
      mutable_plyrpos()->::GameMsg::PlyrPos::MergeFrom(from.plyrpos());
      break;
    }
    case kActionData: {
      set_actiondata(from.actiondata());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
}

void BroadCast::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GameMsg.BroadCast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BroadCast::CopyFrom(const BroadCast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GameMsg.BroadCast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BroadCast::IsInitialized() const {
  return true;
}

void BroadCast::Swap(BroadCast* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BroadCast::InternalSwap(BroadCast* other) {
  using std::swap;
  usrname_.Swap(&other->usrname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(plyrid_, other->plyrid_);
  swap(bctype_, other->bctype_);
  swap(Data_, other->Data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BroadCast::GetMetadata() const {
  protobuf_GameMsg_2eprotoc::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMsg_2eprotoc::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace GameMsg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GameMsg::SyncPlyrId* Arena::CreateMaybeMessage< ::GameMsg::SyncPlyrId >(Arena* arena) {
  return Arena::CreateInternal< ::GameMsg::SyncPlyrId >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GameMsg::Chat* Arena::CreateMaybeMessage< ::GameMsg::Chat >(Arena* arena) {
  return Arena::CreateInternal< ::GameMsg::Chat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GameMsg::PlyrPos* Arena::CreateMaybeMessage< ::GameMsg::PlyrPos >(Arena* arena) {
  return Arena::CreateInternal< ::GameMsg::PlyrPos >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GameMsg::Plyr* Arena::CreateMaybeMessage< ::GameMsg::Plyr >(Arena* arena) {
  return Arena::CreateInternal< ::GameMsg::Plyr >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GameMsg::SyncPlyrs* Arena::CreateMaybeMessage< ::GameMsg::SyncPlyrs >(Arena* arena) {
  return Arena::CreateInternal< ::GameMsg::SyncPlyrs >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GameMsg::BroadCast* Arena::CreateMaybeMessage< ::GameMsg::BroadCast >(Arena* arena) {
  return Arena::CreateInternal< ::GameMsg::BroadCast >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
